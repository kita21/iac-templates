AWSTemplateFormatVersion: "2010-09-09"
Description: "stackName: {ENV}-subnet. AWS::EC2::Subnet AWS::EC2::RouteTable AWS::EC2::Route AWS::EC2::SubnetRouteTableAssociation AWS::EC2::EIP AWS::EC2::NatGateway"

Parameters:
  Env:
    Type: String
    Description: Project environment
    AllowedValues: [dev, prd]
  Project:
    Type: String
    Description: Project Name
    Default: example

Resources:
# Subnet
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.1.0/24
      VpcId:
        Fn::ImportValue: !Sub ${Env}-vpc-id
      Tags:
        - Key: Name
          Value: !Sub ${Env}-${Project}-public-1a-subnet
  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.2.0/24
      VpcId:
        Fn::ImportValue: !Sub ${Env}-vpc-id
      Tags:
        - Key: Name
          Value: !Sub ${Env}-${Project}-public-1c-subnet

  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.128.0/24
      VpcId:
        Fn::ImportValue: !Sub ${Env}-vpc-id
      Tags:
        - Key: Name
          Value: !Sub ${Env}-${Project}-private-1a-subnet
  PrivateSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.129.0/24
      VpcId:
        Fn::ImportValue: !Sub ${Env}-vpc-id
      Tags:
        - Key: Name
          Value: !Sub ${Env}-${Project}-private-1c-subnet

# RouteTable
  PublicSubnetRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${Env}-vpc-id
      Tags:
        - Key: Name
          Value: !Sub ${Env}-${Project}-public-rt
  PublicSubnetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicSubnetRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Fn::ImportValue: !Sub ${Env}-igw-id
  PublicSubnet1aRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1a
      RouteTableId: !Ref PublicSubnetRT
  PublicSubnet1cRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1c
      RouteTableId: !Ref PublicSubnetRT

  PrivateSubnetRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${Env}-vpc-id
      Tags:
        - Key: Name
          Value: !Sub ${Env}-${Project}-private-rt
  # PrivateSubnetRoute:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId: !Ref PrivateSubnetRT
  #     DestinationCidrBlock: 0.0.0.0/0
  PrivateSubnet1aRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1a
      RouteTableId: !Ref PrivateSubnetRT
  PrivateSubnet1cRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1c
      RouteTableId: !Ref PrivateSubnetRT

Outputs:
# SubnetId
  PublicSubnet1aId:
    Description: Output Export AWS::EC2::Subnet.SubnetId PublicSubnet1a
    Value: !GetAtt PublicSubnet1a.SubnetId
    Export:
      Name: !Sub ${Env}-public-1a-subnet-id
  PublicSubnet1cId:
    Description: Output Export AWS::EC2::Subnet.SubnetId PublicSubnet1c
    Value: !GetAtt PublicSubnet1c.SubnetId
    Export:
      Name: !Sub ${Env}-public-1c-subnet-id
  PrivateSubnet1aId:
    Description: Output Export AWS::EC2::Subnet.SubnetId PrivateSubnet1a
    Value: !GetAtt PrivateSubnet1a.SubnetId
    Export:
      Name: !Sub ${Env}-private-1a-subnet-id
  PrivateSubnet1cId:
    Description: Output Export AWS::EC2::Subnet.SubnetId PrivateSubnet1c
    Value: !GetAtt PrivateSubnet1c.SubnetId
    Export:
      Name: !Sub ${Env}-private-1c-subnet-id
# CidrBlock
  PublicSubnet1aCidrBlock:
    Description: Output Export AWS::EC2::Subnet.CidrBlock PublicSubnet1a
    Value: !GetAtt PublicSubnet1a.CidrBlock
    Export:
      Name: !Sub ${Env}-public-1a-subnet-cidrblock
  PublicSubnet1cCidrBlock:
    Description: Output Export AWS::EC2::Subnet.CidrBlock PublicSubnet1c
    Value: !GetAtt PublicSubnet1c.CidrBlock
    Export:
      Name: !Sub ${Env}-public-1c-subnet-cidrblock
  PrivateSubnet1aCidrBlock:
    Description: Output Export AWS::EC2::Subnet.CidrBlock PrivateSubnet1a
    Value: !GetAtt PrivateSubnet1a.CidrBlock
    Export:
      Name: !Sub ${Env}-private-1a-subnet-cidrblock
  PrivateSubnet1cCidrBlock:
    Description: Output Export AWS::EC2::Subnet.CidrBlock PrivateSubnet1c
    Value: !GetAtt PrivateSubnet1c.CidrBlock
    Export:
      Name: !Sub ${Env}-private-1c-subnet-cidrblock
# RouteTable
  PrivateSubnetRTId:
    Description: Output Export AWS::EC2::RouteTable.RouteTableId PrivateSubnetRT
    Value: !GetAtt PrivateSubnetRT.RouteTableId
    Export:
      Name: !Sub ${Env}-private-rt-id
